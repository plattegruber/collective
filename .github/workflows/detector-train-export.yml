name: detector-train-export

on:
  push:
    paths:
      - 'assets/**'
      - 'ml_pipeline/**'
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Python deps (CPU wheels)
        run: |
          python -m pip install --upgrade pip
          # Install PyTorch CPU version
          pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
          # Install requirements
          pip install -r requirements.txt
          # Try to install TFJS deps, but don't fail if they're not available
          pip install onnx-tf tensorflow tensorflowjs || echo "TFJS dependencies not available, will use ONNX fallback"

      - name: Build dataset
        run: |
          python ml_pipeline/make_dataset.py \
            --assets-dir assets \
            --out out_dataset \
            --img-size 640 \
            --samples-per-piece 160

      - name: Train detector
        run: |
          python ml_pipeline/train.py \
            --data out_dataset \
            --out out_models/ssdlite320 \
            --epochs 12 \
            --batch-size 16 \
            --img-size 320

      - name: Export for web (prefer TFJS, fallback ONNX)
        run: |
          python ml_pipeline/export_tfjs.py \
            --onnx out_models/ssdlite320/best.onnx \
            --labels out_models/ssdlite320/labels.json \
            --out models \
            --public public \
            --prefer tfjs

      - name: Install Node dependencies
        run: npm ci

      - name: Build site with model
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-with-model
          path: dist/
          retention-days: 30

      # Deploy to GitHub Pages if on main branch
      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        id: deployment
        uses: actions/deploy-pages@v4